{"version":3,"sources":["theme.tsx","components/NavBar/index.tsx","routes/AppRouter.tsx","App.tsx","index.tsx"],"names":["colors","Index","useState","isMobile","setIsMobile","MobileComponent","props","NavLinkMobile","onClick","children","NavLink","Logo","LinkItem","to","SignUpLink","BottomMobile","styled","h4","NavBar","nav","ul","Link","div","AppRouter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAcA,EACF,UADEA,EAEG,UAFHA,EAGG,U,yCCmDFC,EA/CD,WAAO,IAAD,EAEcC,oBAAS,GAFvB,mBAEXC,EAFW,KAEDC,EAFC,KAIZC,EAA4B,SAACC,GACjC,OACE,mCAEEH,EACE,cAACI,EAAD,CAAeC,QAAS,kBAAMJ,GAAY,IAA1C,SAAoDE,EAAMG,WAC1D,cAACC,EAAD,UAAUJ,EAAMG,cAMxB,OACE,eAAC,EAAD,WACE,cAACE,EAAD,mBACA,eAACN,EAAD,WACE,cAACO,EAAD,CAAUC,GAAG,GAAb,SACE,wCAEF,cAACD,EAAD,CAAUC,GAAG,GAAb,SACE,yCAEF,cAACD,EAAD,CAAUC,GAAG,GAAb,SACE,2CAEF,cAACD,EAAD,CAAUC,GAAG,GAAb,SACE,wCAEF,cAACC,EAAD,CAAYD,GAAG,GAAf,SACE,qDAGJ,cAACE,EAAD,CAAcP,QAAS,kBAAMJ,GAAaD,IAA1C,SAEEA,EACE,cAAC,IAAD,IACA,cAAC,IAAD,UAWJQ,EAAOK,IAAOC,GAAV,sEAIJC,EAASF,IAAOG,IAAV,oKAMUnB,GAGhBU,EAAUM,IAAOI,GAAV,gNAWPb,EAAgBS,IAAOI,GAAV,sRAMKpB,GAOlBY,EAAWI,YAAOK,IAAPL,CAAH,qVAeDhB,GAGPc,EAAaE,YAAOK,IAAPL,CAAH,ydAUIhB,GAYde,EAAeC,IAAOM,IAAV,+NCnHHC,EAbG,WAChB,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UCFOC,EARH,WACV,OACE,mCACC,cAAC,EAAD,O,MCALC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.28753854.chunk.js","sourcesContent":["export const  colors = {\r\n  primary : '#1B6CE6',\r\n  primaryHover : '#317cec',\r\n  primaryLight : '#b4cef5',\r\n}","import { useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport {Link} from 'react-router-dom'\r\nimport { colors } from '../../theme';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nconst Index = () => {\r\n\r\n  const [isMobile, setIsMobile] = useState(false)\r\n\r\n  const MobileComponent: React.FC = (props) => {\r\n    return(\r\n      <>\r\n      {\r\n        isMobile\r\n        ? <NavLinkMobile onClick={() => setIsMobile(false)} >{props.children}</NavLinkMobile>\r\n        : <NavLink>{props.children}</NavLink>\r\n      }\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <NavBar>\r\n      <Logo>Logo</Logo>\r\n      <MobileComponent>\r\n        <LinkItem to=\"\">\r\n          <li>Home</li>\r\n        </LinkItem>\r\n        <LinkItem to=\"\">\r\n          <li>About</li>\r\n        </LinkItem>\r\n        <LinkItem to=\"\">\r\n          <li>Contact</li>\r\n        </LinkItem>\r\n        <LinkItem to=\"\">\r\n          <li>Blog</li>\r\n        </LinkItem>\r\n        <SignUpLink to=\"\">\r\n          <li>Iniciar Sesion</li>\r\n        </SignUpLink>\r\n      </MobileComponent>\r\n      <BottomMobile onClick={() => setIsMobile(!isMobile)  } >\r\n      {\r\n        isMobile\r\n        ? <ClearIcon />\r\n        : <MenuIcon />\r\n      }\r\n      </BottomMobile>\r\n    </NavBar>\r\n  )\r\n}\r\n\r\nexport default Index\r\n\r\n\r\n\r\nconst Logo = styled.h4`\r\n  font-size: 25px;\r\n  margin-left: 30px;\r\n`\r\nconst NavBar = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 60px;\r\n  color: white;\r\n  background-color: ${colors.primary};\r\n`\r\n\r\nconst NavLink = styled.ul`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  list-style: none;\r\n  margin-right: 30px;\r\n  width: 75%;\r\n  @media screen and (max-width : 780px){\r\n    display: none;\r\n    \r\n  }\r\n`\r\nconst NavLinkMobile = styled.ul`\r\n  padding-left: 0;\r\n  @media screen and (max-width : 780px){\r\n    position: absolute;\r\n    display: block;\r\n    list-style: none;\r\n    background-color: ${colors.primary};\r\n    left: 0;\r\n    top: 40px;\r\n    transition: all 0.5s ease-in-out;\r\n    width: 100%;\r\n  }\r\n`\r\nconst LinkItem = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 1.1rem;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  @media screen and (max-width : 780px){\r\n    color: white;\r\n    text-align: center;\r\n    padding: 30px;\r\n    width: 100%;\r\n    transition: all 0.5s ease-in-out;\r\n    \r\n  }\r\n  :hover{\r\n    color: ${colors.primaryLight}\r\n  }\r\n`\r\nconst SignUpLink = styled(Link)`\r\n  text-decoration: none;\r\n  color: white;\r\n  font-size: 1.0rem;\r\n  padding: 10px 10px;\r\n  cursor: pointer;\r\n  border: 1px solid blanchedalmond;\r\n  border-radius: 5px;\r\n  @media screen and (min-width : 780px){\r\n    :hover{\r\n      background: ${colors.primaryHover};\r\n    }\r\n  }\r\n  @media screen and (max-width : 780px){\r\n    color: white;\r\n    text-align: center;\r\n    padding: 30px;\r\n    width: 100%;\r\n    transition: all 0.5s ease-in-out;\r\n    border: none;\r\n  }\r\n`\r\nconst BottomMobile = styled.div`\r\n  display: none;\r\n  @media screen and (max-width : 780px){\r\n    display: block;\r\n    font-size: 1.2rem;\r\n    position: absolute;\r\n    cursor: pointer;\r\n    right: 25px;\r\n    top: 15px;\r\n  }\r\n  \r\n`","import { \r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n  } from 'react-router-dom'\r\nimport  Nav  from '../components/NavBar'\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Nav />\r\n        <Switch>\r\n\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppRouter\r\n","import AppRouter from \"./routes/AppRouter\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n     <AppRouter /> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}